public class Main {

  public static void main(String[] args) {
    // enum - класс-перечисление
    // содержит в себе список значений
    //   (значения оформляем, как константы - ВОТ_ТАК_ВОТ, и записываем через запятую)
    // Каждое значение соответствует своему порядковому номеру.
    // Каждому экземпляру этого класса можно присвоить одно значение из списка:
    // Класс переменная = Класс.ЗНАЧЕНИЕ;
    // У каждого класса enum есть статический метод values(),
    //   который возвращает массив значений (в порядке описания их в enum):
    //   public static Класс[] values()
    // Получить порядковый номер можно при помощи метода `ordinal()`.
    Month currentMonth = Month.JULY;
    System.out.println(currentMonth);
    System.out.println(currentMonth.ordinal() + 1);

    for (Month m : Month.values()) {
      System.out.println("Месяц " + m + ", порядковый номер " + m.ordinal());
    }

//    Month[] months = Month.values();
//    Month second = months[1]; // (месяц с индексом 1 - то есть второй по порядку)
    Month second = Month.values()[1];
    System.out.println("second: " + second);

    // статический метод Класс.valueOf("ЗНАЧЕНИЕ") превратит строку в соответствующее
    // значение. Значение должно совпадать со строкой ПОСИМВОЛЬНО.
    System.out.println(
        "Month.valueOf(\"March\".toUpperCase()): " + Month.valueOf("March".toUpperCase()));

    // enum применяется для объединения констант, список которых не планируется менять,
    // или для изменения списка всё равно потребуется переписывать программу.

    // Примеры из реальной жизни:
    // - стабильный список значений:
    //   - дни недели
    //   - месяцы
    // - режимы работы:
    //   - пункты основного меню (команды) - буквально константы, объединённые в одну группу
    //   - форматы (например, файлов)
    // - стадии (этапы) обработки - состояние (state) процесса, статус заказа...

    // Плохие примеры:
    // - размеры одежды (XS, S, M, L, XL) - плохой пример, можно захотеть добавить XXL
    //   не хотелось бы ради добавления размера футболки переписывать программу для
    //   складского учёта
    // - список валют
    // - стандартные размеры инструментов
    // - единицы измерения

    // Выбираем мы между enum и сохранением в отдельный файл, откуда будем читать в начале
    // работы программы.
    // Размеры, список валют, единицы измерения замечательно хранятся в файлах и читаются из
    // них.
    // Всё, что можно изменить / добавить / удалить, и не менять при этом программный код,
    // стоит хранить ОТДЕЛЬНО от программного кода (файлы с настройками и базы данных).
  }
}

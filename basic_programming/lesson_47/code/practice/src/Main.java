import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;

public class Main {

  // Проект:
  //   распределение по группам (3 человека):
  //   - пожелания прислать до 18:30 понедельника
  //   - в этот раз в одиночку работать нельзя
  //   - работа над проектом - понедельник и среда
  //   - Темы: HashMap, разбиение на методы, обработка исключений
  //   - тема проекта (у всех одинаковая) будет озвучена в понедельник
  // Работа над задачей с нуля:
  // - описание функционала (technical requirements):
  //   - какие данные (и откуда) поступают на вход (input)
  //   - какие данные (и куда) поступают на выход (output)
  // - составление алгоритма:
  //   - общей идеи (оценка эффективности)
  //   - разбиение на компоненты (классы, методы, ...)
  //     - (выбор подходящих паттернов проектирования)
  //     - проработка интерфейсов классов или сигнатур методов
  // - реализация
  // - интеграция (объединение компонентов)
  // - тестирование итогового продукта
  // Вопросы:
  // - scanner.hasNextLine()?
  // - scanner.nextLine() vs. scanner.next()
  // - форматированный вывод (очень простая часть функционала)
  // - substring()

  // Задача:
  // Как известно, в США президент выбирается не прямым голосованием,
  // а путем двухуровневого голосования.
  // Сначала проводятся выборы в каждом штате и определяется победитель выборов
  // в данном штате.
  // Затем проводятся государственные выборы: на этих выборах каждый штат
  // имеет определенное число голосов — число выборщиков от этого штата.
  // На практике, все выборщики от штата голосуют в соответствии с результами
  // голосования внутри штата, то есть на заключительной стадии выборов в
  // голосовании участвуют штаты, имеющие различное число голосов.
  //
  // Каждая запись содержит фамилию кандидата и число голосов,
  // отданных за него в одном из штатов.
  // Подведите итоги выборов: для каждого из участника голосования определите
  // число отданных за него голосов.

  // Формат ввода:
  // McCain 10
  // McCain 5
  // Obama 9
  // Obama 8
  // McCain 1

  // Формат вывода:
  // McCain 16
  // Obama 17
  public static void main(String[] args) {
    Map<String, Integer> votes = new HashMap<>();
    Scanner scanner = new Scanner(System.in);
    while (scanner.hasNextLine()) { // пока строчки не закончились
      String line = scanner.nextLine(); // читаем следующую строку
      int spaceIndex = line.indexOf(' '); // ищем в строке пробел
//      int secondSpaceIndex = line.indexOf(' ', spaceIndex + 1);
      if (spaceIndex == -1) { // если не нашли пробел
        System.out.println("Некорректная строка: " + line);
        continue; // досрочно перейдёт к следующему шагу цикла
      }
      // если сюда попали, то continue не было и пробел найден
      // substring - подстрока - копирует из строки фрагмент
      // от beginIndex (включая) до endIndex (не включая)
      // с начала строки до пробела, не включая пробел

      // i    =  012345678
      // line = "McCain 10"
      // spIn = 6
      // name = line.substring(0, 6) = символы с индексами 0,1,2,3,4,5
      // name = "McCain"
      String name = line.substring(0, spaceIndex);
      // vtSt = line.substring(7) = символы от индекса 7 до конца строки
      // то же самое, что line.substring(7, line.size())
      // vtSt = "10"
      // начнём с символа ПОСЛЕ пробела (индекс пробела + 1)
      // substring с одним аргументом (только начало) - "до самого конца"
      String voteStr = line.substring(spaceIndex + 1);
      // превратим строку voteStr в число vote: "10" -> 10
      int vote = Integer.parseInt(voteStr); // NumberFormatException, если не получится
      System.out.println("name: " + name + ", vote: " + vote);
    }
    // вместо while можно for:
    // подвох: первую строку попытаемся прочитать без проверок
//    for (String line = sc.nextLine(); sc.hasNextLine(); line = sc.nextLine()) {
//      // обработка line
//    }
  }
}
